/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    mosi-pin = <6>;

    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.

    sck-pin = <5>;
    miso-pin = <7>;

};

/ {
    combos {
        compatible = "zmk,combos";

        combo_escape {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
            timeout-ms = <90>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
   &kp TAB   &kp Q   &kp W     &kp E   &kp R   &kp T              &kp Y   &kp U      &kp I    &kp O     &kp P       &kp BSPC
 &kp LCTRL   &kp A   &kp S     &kp D   &kp F   &kp G              &kp H   &kp J      &kp K    &kp L  &kp SEMI        &kp SQT
 &kp LSHFT   &kp Z   &kp X     &kp C   &kp V   &kp B              &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
                            &kp LGUI   &mo 1          &kp SPACE           &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
    &kp ESC  &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp PLUS           &kp CARET   &kp AMPS  &kp KP_MULTIPLY   &kp LPAR   &kp RPAR        &kp DEL
  &kp LCTRL    &kp KP_DIVIDE  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS            &kp LEFT   &kp DOWN           &kp UP  &kp RIGHT  &kp GRAVE      &kp TILDE
 &kp LSHIFT     &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL            &kp HOME  &kp PG_DN        &kp PG_UP    &kp END  &kp PSCRN  &mt RSHFT RET
                                                &kp LGUI        &trans             &kp RET                 &to 3         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
   &kp ESC  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT             &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp PLUS      &kp MINUS       &kp DEL
 &kp LCTRL    &trans  &trans    &trans      &trans       &trans             &kp EQUAL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &kp GRAVE  &kp BACKSLASH  &kp CAPSLOCK
 &kp LSHFT    &trans  &trans    &trans      &trans       &trans             &kp MINUS        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp TILDE2       &kp PIPE       &kp F12
                              &kp LGUI       &to 3               &kp UNDER                           &trans               &kp RALT
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
 &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
 &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none         &none       &none
           &none            &none            &none            &none   &none            &none                &none         &none         &none         &none         &none       &none
                                                             &trans  &trans                    &to 0                      &trans        &trans
            >;
        };
    };
};
